extends layout
block content
 h1.text-center= title
 if (!toShow)
  h2 No instance found
 else
  - let productid = toShow._id
  - let product_type = toShow.product_type
  - let productcost = toShow.cost
  - let productfeature = toShow.feature
  - let actionid = "/resource/products/" + productid
  form(id='productForm', action= actionid, method="PUT")
   .card.mx-auto.mt-5
    .card-body.text-center
     div.row(class='mb-2')
      div.col-3.text-right
       label(class='productAttr', for='productid') Product ID
       div #{productid}
      div.col-3.text-right
       label(class='productAttr', for='product_type') Product Type
       br
       input#product_type(type='text', class='form-control', name='product_type', value= product_type)
      div.col-3.text-right
       label(class='productAttr', for='feature') Product feature
       br
       input#productfeature(type='text', class='form-control', name='feature', value= productfeature)
      div.col-3.text-right
       label(class='productAttr', for='cost') Product Cost
       br
       input#productcost(type='number', class='form-control', name='cost', value= productcost)
       br
       br
      div.text-center
       input(type="submit" class="btn btn-primary" value="Submit")
    script.
     document.forms['productForm'].addEventListener('submit', (event) => {
      event.preventDefault();
      // TODO do something here to show the user that the form is being submitted
      fetch(event.target.action, {
       method: 'PUT',
       body: new URLSearchParams(new FormData(event.target)) // event.target is the form
      }).then((resp) => {
       return resp.json(); // or resp.text() or whatever the server sends
      }).then((body) => {
       alert("Update succeeded");
       // TODO handle body
      }).catch((error) => {
       // TODO handle error
       alert("Update failed " + error );
      });
     });
 style.
  .productAttr {
   background-color: aquamarine;
   width: 120px;
   margin: 0 auto;
  }



